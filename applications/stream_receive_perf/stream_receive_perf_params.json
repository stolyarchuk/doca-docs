/*
 * Copyright (c) 2025 NVIDIA CORPORATION AND AFFILIATES.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are permitted
 * provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright notice, this list of
 *       conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright notice, this list of
 *       conditions and the following disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 *     * Neither the name of the NVIDIA CORPORATION nor the names of its contributors may be used
 *       to endorse or promote products derived from this software without specific prior written
 *       permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL NVIDIA CORPORATION BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TOR (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
 {
	"doca_general_flags": {
		// -l - Set the (numeric) log level for the program <10=DISABLE, 20=CRITICAL, 30=ERROR, 40=WARNING, 50=INFO, 60=DEBUG, 70=TRACE>
		"log-level": 60
	},
	"doca_program_flags": {
		// List available devices
		"list" : true,
		// Scattering type: RAW (default) or ULP
		"scatter-type" : "RAW",
		// --tstamp-format - Timestamp format: raw (default), free-running or synced
		"tstamp-format" : "raw",
		// -s - Source address to read from
		"src-ip" : "1.1.63.5",
		// -d - Destination address to bind to
		"dst-ip" : "1.1.64.67",
		// -i - IP of the local interface to receive data
		"local-ip" : "1.1.64.67",
		// -p - Destination port to read from
		"dst-port" : 7000,
		// -K - Number of packets to allocate memory for (default 262144)
		"packets" : 262144,
		// -y - Packet's payload size (default 1500)
		"payload-size" : 1200,
		// -e - Packet's application header size (default 0)
		"app-hdr-size" : 20,
		// -a - Comma separated list of CPU affinity cores for the application main thread
		"cpu-affinity" : "1,2,3",
		// Amount of microseconds to sleep between requests (default 0)
		"sleep" : 100,
		// Block until at least this number of packets are received (default 0)
		"min" : 0,
		// Maximum number of packets to return in one completion
		"max" : 1000,
		// Dump packet content
		"dump" : true
	}
}
