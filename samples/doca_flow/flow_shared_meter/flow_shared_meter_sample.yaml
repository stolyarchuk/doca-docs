#
# Copyright (c) 2025 NVIDIA CORPORATION AND AFFILIATES.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted
# provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright notice, this list of
#       conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright notice, this list of
#       conditions and the following disclaimer in the documentation and/or other materials
#       provided with the distribution.
#     * Neither the name of the NVIDIA CORPORATION nor the names of its contributors may be used
#       to endorse or promote products derived from this software without specific prior written
#       permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL NVIDIA CORPORATION BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TOR (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

number_of_ports: 2
mode_args:
  - vnf
ports_description:
  port_0: doca_dev
  port_1: doca_dev
description: "The sample illustrate how to create a shared meter action, then create a
              pipe/entry with metered traffic, using the shared meter action. The sample
	      assume configuration of two ports. Any traffic injected at a high bandwidth
	      into one of the ports is received at a metered (lower) bandwidth on the other port.
        Sample Command Line: ./build/doca_flow_shared_meter  -a auxiliary:mlx5_core.sf.2,dv_flow_en=2 -a auxiliary:mlx5_core.sf.3,dv_flow_en=2 -- -l 60"
use_cases:
  - name: "Shared meter use case #1"
    args: ""
    stages:
      - name: "Sending packets iteration 1"
        packets_to_send:
          - receiving_port: 0
            packets:
              - Ether()/IP(src='1.2.3.4', dst='8.8.8.8')/TCP(sport=1234, dport=80)/Raw(load=b'Sent to port 0, forwarded from port 1')
              - Ether()/IP(src='1.2.3.4', dst='8.8.8.8')/UDP(sport=1234, dport=80)/Raw(load=b'Sent to port 0, forwarded from port 1')
          - receiving_port: 1
            packets:
              - Ether()/IP(src='1.2.3.4', dst='8.8.8.8')/TCP(sport=1234, dport=80)/Raw(load=b'Sent to port 1, forwarded from port 0')
              - Ether()/IP(src='1.2.3.4', dst='8.8.8.8')/UDP(sport=1234, dport=80)/Raw(load=b'Sent to port 1, forwarded from port 0')
        validation:
          - type: packet
            expected_packets:
              - forwarding_port: 0
                packets:
                  - Ether()/IP(src='1.2.3.4', dst='8.8.8.8')/TCP(sport=1234, dport=80)/Raw(load=b'Sent to port 1, forwarded from port 0')
                  - Ether()/IP(src='1.2.3.4', dst='8.8.8.8')/UDP(sport=1234, dport=80)/Raw(load=b'Sent to port 1, forwarded from port 0')
              - forwarding_port: 1
                packets:
                  - Ether()/IP(src='1.2.3.4', dst='8.8.8.8')/TCP(sport=1234, dport=80)/Raw(load=b'Sent to port 0, forwarded from port 1')
                  - Ether()/IP(src='1.2.3.4', dst='8.8.8.8')/UDP(sport=1234, dport=80)/Raw(load=b'Sent to port 0, forwarded from port 1')
