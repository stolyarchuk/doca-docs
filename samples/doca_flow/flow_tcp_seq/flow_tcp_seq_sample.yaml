#
# Copyright (c) 2025 NVIDIA CORPORATION AND AFFILIATES.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted
# provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright notice, this list of
#       conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright notice, this list of
#       conditions and the following disclaimer in the documentation and/or other materials
#       provided with the distribution.
#     * Neither the name of the NVIDIA CORPORATION nor the names of its contributors may be used
#       to endorse or promote products derived from this software without specific prior written
#       permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL NVIDIA CORPORATION BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TOR (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

number_of_ports: 2
min_supported_nic: ConnectX-7
mode_args:
  - vnf
ports_description:
  port_0: doca_dev
  port_1: doca_dev
description: "The sample illustrates a flow that matches on TCP packets with sequence number less than 10,
              adds constant value to acknowledgment number field of each TCP packet and forwards the packet to other port
              If the sequence number is greater than 10, the packet is dropped.
              Sample Command Line: ./build/doca_flow_tcp_seq  -a auxiliary:mlx5_core.sf.2,dv_flow_en=2 -a auxiliary:mlx5_core.sf.3,dv_flow_en=2 -- -l 60"
use_cases:
  - name: "Flow TCP sequence use case #1"
    args: ""
    stages:
      - name: "Sending packets iteration 1"
        packets_to_send:
          - receiving_port: 0
            packets:
              - Ether()/IP()/TCP(seq=7, ack=14)/Raw(load=b'Sent to port 0, ack value applied, forwarded to port 1')
              - Ether()/IP()/TCP(seq=12, ack=7)/Raw(load=b'Sent to port 0, seq is greater than 10, dropped')
          - receiving_port: 1
            packets:
              - Ether()/IP()/TCP(seq=7, ack=14)/Raw(load=b'Sent to port 1, ack value applied, forwarded to port 0')
              - Ether()/IP()/TCP(seq=12, ack=7)/Raw(load=b'Sent to port 1, seq is greater than 10, dropped')
        validation:
          - type: packet
            expected_packets:
              - forwarding_port: 0
                packets:
                  - Ether()/IP()/TCP(seq=7, ack=328)/Raw(load=b'Sent to port 1, ack value applied, forwarded to port 0')
              - forwarding_port: 1
                packets:
                  - Ether()/IP()/TCP(seq=7, ack=328)/Raw(load=b'Sent to port 0, ack value applied, forwarded to port 1')
